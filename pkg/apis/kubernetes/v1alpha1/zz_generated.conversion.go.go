// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by main. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	kubernetes "github.com/juan-lee/genesys/pkg/apis/kubernetes"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Cluster)(nil), (*kubernetes.Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Cluster_To_kubernetes_Cluster(a.(*Cluster), b.(*kubernetes.Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kubernetes.Cluster)(nil), (*Cluster)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kubernetes_Cluster_To_v1alpha1_Cluster(a.(*kubernetes.Cluster), b.(*Cluster), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterList)(nil), (*kubernetes.ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterList_To_kubernetes_ClusterList(a.(*ClusterList), b.(*kubernetes.ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kubernetes.ClusterList)(nil), (*ClusterList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kubernetes_ClusterList_To_v1alpha1_ClusterList(a.(*kubernetes.ClusterList), b.(*ClusterList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterSpec)(nil), (*kubernetes.ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterSpec_To_kubernetes_ClusterSpec(a.(*ClusterSpec), b.(*kubernetes.ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kubernetes.ClusterSpec)(nil), (*ClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kubernetes_ClusterSpec_To_v1alpha1_ClusterSpec(a.(*kubernetes.ClusterSpec), b.(*ClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterStatus)(nil), (*kubernetes.ClusterStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClusterStatus_To_kubernetes_ClusterStatus(a.(*ClusterStatus), b.(*kubernetes.ClusterStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kubernetes.ClusterStatus)(nil), (*ClusterStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kubernetes_ClusterStatus_To_v1alpha1_ClusterStatus(a.(*kubernetes.ClusterStatus), b.(*ClusterStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Cluster_To_kubernetes_Cluster(in *Cluster, out *kubernetes.Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ClusterSpec_To_kubernetes_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ClusterStatus_To_kubernetes_ClusterStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Cluster_To_kubernetes_Cluster is an autogenerated conversion function.
func Convert_v1alpha1_Cluster_To_kubernetes_Cluster(in *Cluster, out *kubernetes.Cluster, s conversion.Scope) error {
	return autoConvert_v1alpha1_Cluster_To_kubernetes_Cluster(in, out, s)
}

func autoConvert_kubernetes_Cluster_To_v1alpha1_Cluster(in *kubernetes.Cluster, out *Cluster, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_kubernetes_ClusterSpec_To_v1alpha1_ClusterSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_kubernetes_ClusterStatus_To_v1alpha1_ClusterStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_kubernetes_Cluster_To_v1alpha1_Cluster is an autogenerated conversion function.
func Convert_kubernetes_Cluster_To_v1alpha1_Cluster(in *kubernetes.Cluster, out *Cluster, s conversion.Scope) error {
	return autoConvert_kubernetes_Cluster_To_v1alpha1_Cluster(in, out, s)
}

func autoConvert_v1alpha1_ClusterList_To_kubernetes_ClusterList(in *ClusterList, out *kubernetes.ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]kubernetes.Cluster)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_ClusterList_To_kubernetes_ClusterList is an autogenerated conversion function.
func Convert_v1alpha1_ClusterList_To_kubernetes_ClusterList(in *ClusterList, out *kubernetes.ClusterList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterList_To_kubernetes_ClusterList(in, out, s)
}

func autoConvert_kubernetes_ClusterList_To_v1alpha1_ClusterList(in *kubernetes.ClusterList, out *ClusterList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Cluster)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_kubernetes_ClusterList_To_v1alpha1_ClusterList is an autogenerated conversion function.
func Convert_kubernetes_ClusterList_To_v1alpha1_ClusterList(in *kubernetes.ClusterList, out *ClusterList, s conversion.Scope) error {
	return autoConvert_kubernetes_ClusterList_To_v1alpha1_ClusterList(in, out, s)
}

func autoConvert_v1alpha1_ClusterSpec_To_kubernetes_ClusterSpec(in *ClusterSpec, out *kubernetes.ClusterSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_ClusterSpec_To_kubernetes_ClusterSpec is an autogenerated conversion function.
func Convert_v1alpha1_ClusterSpec_To_kubernetes_ClusterSpec(in *ClusterSpec, out *kubernetes.ClusterSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterSpec_To_kubernetes_ClusterSpec(in, out, s)
}

func autoConvert_kubernetes_ClusterSpec_To_v1alpha1_ClusterSpec(in *kubernetes.ClusterSpec, out *ClusterSpec, s conversion.Scope) error {
	return nil
}

// Convert_kubernetes_ClusterSpec_To_v1alpha1_ClusterSpec is an autogenerated conversion function.
func Convert_kubernetes_ClusterSpec_To_v1alpha1_ClusterSpec(in *kubernetes.ClusterSpec, out *ClusterSpec, s conversion.Scope) error {
	return autoConvert_kubernetes_ClusterSpec_To_v1alpha1_ClusterSpec(in, out, s)
}

func autoConvert_v1alpha1_ClusterStatus_To_kubernetes_ClusterStatus(in *ClusterStatus, out *kubernetes.ClusterStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_ClusterStatus_To_kubernetes_ClusterStatus is an autogenerated conversion function.
func Convert_v1alpha1_ClusterStatus_To_kubernetes_ClusterStatus(in *ClusterStatus, out *kubernetes.ClusterStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClusterStatus_To_kubernetes_ClusterStatus(in, out, s)
}

func autoConvert_kubernetes_ClusterStatus_To_v1alpha1_ClusterStatus(in *kubernetes.ClusterStatus, out *ClusterStatus, s conversion.Scope) error {
	return nil
}

// Convert_kubernetes_ClusterStatus_To_v1alpha1_ClusterStatus is an autogenerated conversion function.
func Convert_kubernetes_ClusterStatus_To_v1alpha1_ClusterStatus(in *kubernetes.ClusterStatus, out *ClusterStatus, s conversion.Scope) error {
	return autoConvert_kubernetes_ClusterStatus_To_v1alpha1_ClusterStatus(in, out, s)
}
